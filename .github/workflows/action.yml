name: Staging Pipeline

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: npm install
      
      - name: Build
        run: npm run build

      - name: Save build artifacts
        run: mkdir artifacts && mv public/* artifacts/

  package:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build and push Docker image
        run: |
          docker build -t ali/FYP .
          docker push ali/FYP

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Test
        run: npm run test

  terraform-plan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@v3
        with:
          tf_actions_version: 1.1.0
          tf_actions_subcommand: 'init'

      - name: Terraform Plan
        run: terraform plan -out=tfplan
      
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'terraform_plan'
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Terraform Plan
        uses: actions/download-artifact@v2
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply tfplan
        env:
          TF_CLI_ARGS: -auto-approve

  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli -y
      
      - name: Configure AWS credentials
        run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name staging
          kubectl apply -f deployment.yaml
