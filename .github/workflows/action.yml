name: Staging Pipeline

on:
  push:
    branches:
      - staging

env:
  ENVIRONMENT: staging
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1

jobs:
  build_and_package:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build || true

      - name: Save build artifacts
        run: mkdir artifacts && mv public/* artifacts/

      - name: Login to Docker Hub
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t rahi776/fyp:latest .
          docker push rahi776/fyp:latest        

  test:
    runs-on: ubuntu-latest
    needs: build_and_package
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: npm run test || true

  terraform:
    runs-on: ubuntu-latest
    environment: staging
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: terraform -chdir=terraform init -backend-config=env/stg/backend-stg.tfvars

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -var-file=env/stg/stg.tfvars

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -var-file=env/stg/stg.tfvars -auto-approve

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    environment: staging
    defaults:
      run:
        shell: bash    
    steps:
      - uses: actions/checkout@v4
      - name: Set env variable
        run: |
          if [ "${{ github.ref }}" = "refs/heads/staging" ]; then
              echo "TF_ENV=stg" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
              echo "TF_ENV=prod" >> $GITHUB_ENV
          fi
      - name: Deploy
        run: |
          sudo apt-get update && sudo apt-get install awscli -y
          aws eks update-kubeconfig --name ${{ env.TF_ENV }}-cluster --region us-east-1
          kubectl apply -f k8s_manifest/deploy.yaml
          kubectl rollout restart deploy/fyp
