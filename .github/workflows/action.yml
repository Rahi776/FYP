name: Staging Pipeline

on:
  push:
    branches:
      - staging

env:
  ENVIRONMENT: staging
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build || true

      - name: Save build artifacts
        run: mkdir artifacts && mv public/* artifacts/

  package:
    runs-on: ubuntu-latest
    environment: staging
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t rahi776/fyp:latest .
          docker push rahi776/fyp:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: npm run test || true

  terraform-plan:
    runs-on: ubuntu-latest
    environment: staging
    defaults:
      run:
        shell: bash    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform -chdir=terraform init 

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'terraform_apply'
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: staging
    defaults:
      run:
        shell: bash        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: terraform/

      - name: Download Terraform Plan
        uses: actions/download-artifact@v2
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply tfplan
        # env:
        #   TF_CLI_ARGS: -auto-approve

  deploy:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli -y

      # - name: Deploy to EKS
      #   run: |
      #     aws eks update-kubeconfig --name staging
      #     kubectl apply -f deployment.yaml
